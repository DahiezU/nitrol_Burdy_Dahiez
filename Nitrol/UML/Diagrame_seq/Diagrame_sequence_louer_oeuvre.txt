@startuml
actor Membre_Client  as membre
participant VitrineBlibliotheque  as Browser
participant Controle
database databaseMembre as dataM 
database databaseOeuvre as dataO 
participant ProduitPanier
participant Banque

membre -> Browser  : auth()
activate Browser
Browser -> Controle : existClient() 
activate Controle
Controle -> dataM : check()
activate dataM
dataM --> Browser : Ismember
deactivate dataM
deactivate Controle

Browser --> membre : show menu 
deactivate Browser
activate membre



membre -> Browser : ClickCatalogue()
activate Browser

Browser --> membre : ShowCatalogue()
deactivate Browser
membre -> Browser : ClickOeuvre()
deactivate membre
activate Browser
loop 
Browser -> Controle : availableOeuvre()
activate Controle
Controle -> dataO : check()
activate dataO
dataO --> Controle : Isavaible
deactivate dataO
Controle --> Browser : showOeuvre()
deactivate Controle
Browser --> membre : displayDataOeuvre()
deactivate Browser

membre -> Browser : clickOrder()
activate Browser
Browser -> Controle : save()
activate Controle
Controle -> ProduitPanier : createShoppingCart()
Controle --> Browser : success()
deactivate Controle
Browser --> membre : displayPaymentInterface()
deactivate Browser
end

membre -> Browser : clickPay()
activate Browser
activate Browser
Browser -> Controle : PayOrder()
activate Controle
activate Controle
Controle -> Banque : verifWithBanque()
activate Banque
activate Banque


alt Payment successful  

Banque --> Browser : confirmPayment()
deactivate Banque
deactivate Controle
Browser --> membre : displaySuccesfulPayment()
deactivate Browser

else Payment failed 

Banque --> Browser : PaymentFailed()
deactivate Banque
deactivate Controle
Browser --> membre : displayFailedPayment()
deactivate Browser
end






@enduml